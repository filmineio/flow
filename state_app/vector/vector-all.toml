
[api]
enabled = true

[sources.in]
type = "stdin"

[transforms.parse]
inputs = ["in"]
type = "remap"
source = '''
  . = parse_json!(.message)
'''

[transforms.block]
type = "filter"
inputs = ["parse"]
condition = ".Block != null && .ActorId == null"

[transforms.trace]
type = "filter"
inputs = ["parse"]
condition = ".SubCallOf != null"

[transforms.message]
type = "filter"
inputs = ["parse"]
condition = ".SubCallOf == null && .Message != null"


[transforms.bls]
type = "filter"
inputs = ["parse"]
condition = ".ActorId != null"

[transforms.dedupe_bls]
type = "dedupe"
inputs = [ "bls" ]
cache.num_events=100000
fields.match=["ActorId", "Balance"]

[transforms.bench]
type = "filter"
inputs = ["parse"]
condition = '''.target_height != null'''

[sinks.file_block]
type = "file"
inputs = [ "block" ]
compression = "none"
path = '''/Volumes/flowdata/block/{{ Block.Height }}.{{ Cid }}.json'''
encoding.codec = "json"

#[sinks.file_trace]
#type = "file"
#inputs = [ "trace" ]
#compression = "none"
#path = "/Volumes/flowdata/trace/{{ Height }}.{{ BlockCid }}.{{ SubCallOf }}.json"
#encoding.codec = "json"

[sinks.out]
inputs = ["bench"]
type = "console"
encoding.codec = "json"

[sinks.file_message]
type = "file"
inputs = [ "message", "trace" ]
compression = "none"
path = "/Volumes/flowdata/messages/all.json"
encoding.codec = "json"

[sinks.file_bls]
type = "file"
inputs = [ "dedupe_bls" ]
compression = "none"
path = "/Volumes/flowdata/bls/all.json"
encoding.codec = "json"
